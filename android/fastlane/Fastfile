update_fastlane

default_platform(:android)

platform :android do

  desc 'Build app bundle'
  lane :build do |options|
    dartEnv = options[:dartEnv]
    commonConfig = read_xcconfig(path: "./common.properties")
    envConfig = read_xcconfig(path: "../config/#{dartEnv}.config")
    appNameForFile = "EventMeet-#{envConfig['EVENT_CODE'] ? envConfig['EVENT_CODE'] : 'General'}"

    if dartEnv == 'production'
      buildNumber = google_play_track_version_codes(
          track: 'internal',
          package_name: commonConfig['APPLICATION_ID']
      )
#       buildNumber =  [0]
      newBuildNumber = buildNumber[0] + 1
      sh("cd ../.. && flutter build appbundle --obfuscate --split-debug-info=build/android_split_debug_info --build-number=#{newBuildNumber}")
      sh("cd ../.. && mv build/app/outputs/bundle/release/app-release.aab build/#{appNameForFile}.aab")
      sh("cd ../.. && mv build/app/outputs/mapping/release/mapping.txt build/#{appNameForFile}.mapping.txt")

      [
        'arm64-v8a',
        'armeabi-v7a',
        'x86_64',
      ].each do |folderName|
        zip(
            path: "../build/app/intermediates/merged_native_libs/release/out/lib/#{folderName}",
            output_path: "../build/#{appNameForFile}.zip",
        )
        end
    elsif dartEnv == 'stage'
      sh("cd ../.. && flutter build apk --dart-define DART_ENV=stage")
      sh("cd ../.. && mv build/app/outputs/flutter-apk/app-release.apk build/#{appNameForFile}.apk")
    end
  end

  desc 'Deploy to Playstore Internal Testing'
  lane :deploy do |options|
    dartEnv = options[:dartEnv]
    commonConfig = read_xcconfig(path: "./common.properties")
    envConfig = read_xcconfig(path: "../config/#{dartEnv}.config")
    if dartEnv == 'production'
      appNameForFile = "EventMeet-#{envConfig['EVENT_CODE'] ? envConfig['EVENT_CODE'] : 'General'}"
      upload_to_play_store(
                  track: 'internal',
                  json_key: './fastlane/play-store-credentials.json',
                  package_name: commonConfig['APPLICATION_ID'],
                  aab: "../build/#{appNameForFile}.aab",
                  mapping_paths: [
                      "../build/#{appNameForFile}.zip",
                      "../build/#{appNameForFile}.mapping.txt",
                  ],
              )
    end
  end
end
